# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release
on:
  push:
    branches:
      - main
      - next
jobs:
  release:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    env:
      GOOGLE_MAPS_JS_SAMPLES_KEY: "${{ secrets.GOOGLE_MAPS_JS_SAMPLES_KEY }}"
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.SYNCED_GITHUB_TOKEN_REPO }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node
      - run: npm i
      - run: npm run test:jest
      - run: npm run build
      - name: Update dist
        run: |
          npm run build
          git config --global user.name 'googlemaps-bot'
          git config --global user.email 'googlemaps-bot@google.com'
          git add dist
          git commit -m "chore: update dist folder [skip ci]" || true
          git push origin
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 19
          extra_plugins: |
            "@semantic-release/commit-analyzer"
            "@semantic-release/release-notes-generator"
            "@semantic-release/git
            "@semantic-release/github
            "@semantic-release/npm
        env:
          GH_TOKEN: ${{ secrets.SYNCED_GITHUB_TOKEN_REPO }}
          NPM_TOKEN: ${{ secrets.NPM_WOMBAT_TOKEN }}
      - name: Push samples to branches
        run: |
          bash ./sample-to-branch.sh
        env:
          GITHUB_TOKEN: ${{ secrets.SYNCED_GITHUB_TOKEN_REPO }}
